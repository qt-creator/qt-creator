/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Creator documentation.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage {Qt Creator Manual}
    \previouspage creator-os-supported-platforms.html
    \page creator-project-other.html
    \nextpage creator-project-cmake.html

    \title Using Other Build Systems

    Most \QC project wizards enable you to choose the build system to use for
    building the project: qmake, CMake, or Qbs. qmake is installed and
    configured when you install Qt. To use one of the other supported build
    systems, you need to set it up, as described in the the following sections:

    \list

        \li \l{Setting Up CMake}

            CMake is an alternative to qmake for automating the generation of
            build configurations.

        \li \l{Setting Up Qbs}

            \l{Qbs Manual}{Qbs} is an all-in-one build
            tool that generates a build graph from a high-level project
            description (like qmake or CMake do) and executes the commands in
            the low-level build graph (like make does).

        \li \l{Setting Up an Autotools Project}

            \QC can open projects that use the Autotools build system. You can
            build and run the projects directly from \QC.

        \li \l{Setting Up a Generic Project}

            \QC supports generic projects, so you can import existing projects
            that do not use qmake or CMake. This enables you to use \QC as a
            code editor and to fully control the steps and commands used to
            build the project.

    \endlist

*/
