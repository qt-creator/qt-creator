/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Creator documentation.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage {Qt Creator Manual}
    \previouspage creator-build-process-customizing.html
    \page creator-testing.html
    \nextpage creator-debugging.html

    \title Testing

    \image creator_testing.png

    \list

        \li \l{Debugging}

            If you install \QC as part of \QSDK, the GNU Symbolic Debugger
            is installed automatically and you should be ready to start
            debugging after you create a new project. However, you can
            change the setup to use debugging tools for Windows, for
            example. You can connect \l{glossary-device}{devices} to your
            development host and debug processes running on the devices.

        \li \l{Analyzing Code}

            \QC integrates Valgrind code analysis tools for detecting memory
            leaks and profiling function execution. You must download and
            install them separately to use them from \QC. The QML Profiler is
            installed as part of \QC. It enables you to profile your Qt Quick
            applications.

        \li \l{Running Autotests}

            You can build and run Qt tests, Qt Quick tests, and Google tests
            using \QC. In addition, you can use a wizard to create projects that
            contain Qt or Google tests.

    \endlist

*/
