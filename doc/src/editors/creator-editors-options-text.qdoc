/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing
**
** This file is part of Qt Creator
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage {Qt Creator Manual}
    \previouspage creator-editor-options.html
    \page creator-editor-options-text.html
    \nextpage creator-editor-fakevim.html

    \title Specifying Text Editor Settings

    Set the font preferences and apply color schemes for syntax highlighting in
    \uicontrol {Tools > Options > Text Editor > Font & Colors}.

    \image qtcreator-font-colors.png "Text editor options"

    \section2 Configuring Fonts

    You can select the font family and size. You can specify a zoom setting in
    percentage for viewing the text. You can also zoom in or out by pressing
    \key {Ctrl++} or \key {Ctrl+-}, or by pressing \key Ctrl and rolling
    the mouse button up or down. To disable the mouse wheel function, select
    \uicontrol Tools > \uicontrol Options > \uicontrol {Text Editor} >
    \uicontrol Behavior and deselect the
    \uicontrol {Enable scroll wheel zooming} check box.

    Antialiasing is used by default to make text look smoother and more readable
    on the screen. Deselect the \uicontrol Antialias check box to turn off
    antialiasing.

    \section2 Defining Color Schemes

    You can select one of the predefined color schemes for syntax highlighting
    or create customized color schemes. The color schemes apply to highlighting
    both C++ and QML files and generic files.

    To create a color scheme:

    \list 1

        \li Select \uicontrol Tools > \uicontrol Options >
            \uicontrol {Text Editor} > \uicontrol {Fonts & Color} >
            \uicontrol Copy.

        \li Enter a name for the color scheme and click \uicontrol OK.

        \li In the \uicontrol Foreground field, specify the color of the selected
            code element.

        \li In the \uicontrol Background field, select the background
            color for the code element.

        The backgound of the \uicontrol Text element determines the background of the
        code editor.

    \endlist

    When you copy code from \QC, it is copied in both plain text and HTML
    format. The latter makes sure that syntax highlighting is preserved when
    pasting to a rich-text editor.

    \section2 File Encoding

    To define the default file encoding, select \uicontrol Tools >
    \uicontrol Options > \uicontrol {Text Editor} > \uicontrol Behavior, and
    then select a suitable option in \uicontrol {Default encoding}.

    Qt 5 requires UTF-8 encoded source files, and therefore the default encoding
    was changed from \uicontrol System to \uicontrol UTF-8 in \QC version 2.6.
    However, the \uicontrol {Default encoding} field still displays the value
    \uicontrol System if the default system encoding is set to UTF-8.

    Detecting the correct encoding is tricky, so \QC will not try to do so.
    Instead, it displays the following error message when you try to edit a file
    that is not UTF-8 encoded: \uicontrol {Error: Could not decode "filename" with
    "UTF-8"-encoding. Editing not possible.}

    To resolve the issue, use a file conversion tool such as
    \l{http://recode.progiciels-bpi.ca/index.html}{Recode} to convert the file
    encoding to UTF-8 when developing Qt 5 applications. Otherwise, conversion
    of string constants to QStrings might not work as expected.

    If you develop only Qt 4 applications or other than Qt applications, you
    can set other encoding options as the default encoding. Select the
    \uicontrol System option to use the file encoding used by your system.

*/
