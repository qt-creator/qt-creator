/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing
**
** This file is part of Qt Creator.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company.  For licensing terms and
** conditions see http://www.qt.io/terms-conditions.  For further information
** use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, The Qt Company gives you certain additional
** rights.  These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/

/*!
    \contentspage {Qt Creator Manual}
    \previouspage creator-using-qt-quick-designer.html
    \page qmldesigner-pathview-editor.html
    \nextpage qmldesigner-connections.html

    \title Editing PathView Properties

    A \l{PathView} lays out data provided by data models on a \l{Path}.

    A graphical spline editor enables you to specify PathView paths, which
    is a non-trivial task to do in the code editor.

    \image qmldesigner-pathview-editor.png "PathView editor"

    To start editing the Path, double-click the PathView on the canvas. The
    editor composes the path of PathCubic path objects. They are cubic Bezier
    curves to a given position with two control points. Drag and drop the
    control points to construct the curve.

    In addition, PathLine and PathQuad path objects are supported indirectly.
    To make a curve segment linear, select \uicontrol {Make Curve Segment Straight} in
    the context menu.

    By default, the Path is closed, which means that its start and end points
    are identical. To create separate start and end points for it, right-click
    an edit point to open a context menu, and deselect \uicontrol {Closed Path}.

    To add intermediary points to a curve segment, select \uicontrol {Split Segment}
    in the context menu.

    In the \uicontrol Properties pane, you can specify other properties for
    the PathView. For example, what is the maximum distance from the path that
    initiates mouse dragging and what is the rate at which a flick will
    decelerate.

*/
