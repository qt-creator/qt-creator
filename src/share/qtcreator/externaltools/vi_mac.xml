<?xml version="1.0" encoding="UTF-8"?>
<!--
/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing
**
** This file is part of Qt Creator.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company.  For licensing terms and
** conditions see http://www.qt.io/terms-conditions.  For further information
** use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 or version 3 as published by the Free
** Software Foundation and appearing in the file LICENSE.LGPLv21 and
** LICENSE.LGPLv3 included in the packaging of this file.  Please review the
** following information to ensure the GNU Lesser General Public License
** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, The Qt Company gives you certain additional
** rights.  These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/
-->
<externaltool id="vi">
    <description>Opens the current file in vi</description>
    <displayname>Edit with vi</displayname>
    <category>Text</category>
    <executable modifiesdocument="yes">
        <path>osascript</path>
        <input>
        --Terminal opens a window by default when it is not running, so check
        on applicationIsRunning(applicationName)
                tell application &quot;System Events&quot; to count (every process whose name is applicationName)
                return result is greater than 0
        end applicationIsRunning
        set terminalWasRunning to applicationIsRunning(&quot;Terminal&quot;)

        set editorScript to &quot;vi \&quot;%{CurrentDocument:FilePath}\&quot; +%{CurrentDocument:Row} +\&quot;normal %{CurrentDocument:Column}|\&quot;; exit&quot;
        tell application &quot;Terminal&quot;
            --do script will open a new window if none given, but terminal already opens one if not running
            if terminalWasRunning then
                do script editorScript
            else
                do script editorScript in first window
            end if
            set currentTab to the result
            set currentWindow to first window whose tabs contains currentTab
            --set the geometry
            set font size of current settings of currentTab to %{CurrentDocument:FontSize}
            set number of columns of currentTab to %{CurrentDocument:ColumnCount}
            set number of rows of currentTab to %{CurrentDocument:RowCount}
            set position of currentWindow to {%{CurrentDocument:XPos}, %{CurrentDocument:YPos}}
            activate
            --make sure that the command has been called before waiting for it to end
            try --window might have closed
                repeat until currentTab's history contains editorScript
                    delay 0.2
                end repeat
            on error
                return
            end try
            --wait for the command to end and close the window
            repeat
                delay 0.2
                try --window might have closed
                    if busy of currentTab is false then
                        exit repeat
                    end if
                on error
                    return
                end try
            end repeat
            try --window might have closed
                close currentWindow
            end try
        end tell
        </input>
        <workingdirectory>%{CurrentDocument:Path}</workingdirectory>
    </executable>
</externaltool>
